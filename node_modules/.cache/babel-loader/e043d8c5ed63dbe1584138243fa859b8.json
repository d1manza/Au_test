{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\spa\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport SortCity from './Block/resources/SortCity';\nimport Header from './Block/Header';\nimport StatusLine from './Block/StatusLine';\nimport City from './Block/City';\nimport Password from './Block/Password';\nimport PasswordRepeat from './Block/PasswordRepeat';\nimport Mail from './Block/Mail';\nimport CheckBox from './Block/CheckBox';\nimport Button from './Block/Button';\nlet sortCity = SortCity();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      indicatorStatus: false,\n      indicatorCheckBox: true,\n      valueStatus: \"Прежде чем действовать надо понять\",\n      valuePassword: \"\",\n      valuePasswordFinish: \"\",\n      checkedPassword: false,\n      valuePasswordRepeat: \"\",\n      checkedPasswordRepeat: false,\n      valueMail: \"\",\n      checkedMail: false,\n      valueCity: sortCity[0].city,\n      checkedButton: false\n    };\n\n    this.changeIndicator = field => event => {\n      this.setState({\n        [field]: !event.target.checked\n      });\n    };\n\n    this.textInputChange = field => event => {\n      this.setState({\n        [field]: event.target.value\n      });\n    };\n\n    this.textSelectChange = event => {\n      this.setState({\n        valueCity: sortCity[event.target.value].city\n      });\n    };\n\n    this.changeCheckBox = field => event => {\n      this.setState({\n        [field]: event.target.checked\n      });\n    };\n\n    this.buttonFinish = field => event => {\n      if (this.state.valuePassword.length > 0) {\n        this.setState({\n          checkedPassword: true\n        });\n      }\n\n      if (this.state.checkedPassword) {\n        this.setState({\n          checkedButton: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      indicatorStatus: this.state.indicatorStatus,\n      changeIndicatorStatus: this.changeIndicator(\"indicatorStatus\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(StatusLine, {\n      valueStatus: this.state.valueStatus,\n      changeValueStatus: this.textInputChange(\"valueStatus\"),\n      indicatorStatus: this.state.indicatorStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(City, {\n      changeCity: this.textSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Password, {\n      changeValuePassword: this.textInputChange(\"valuePassword\"),\n      valuePassword: this.state.valuePassword,\n      checkedPassword: this.state.checkedPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(PasswordRepeat, {\n      changeValuePasswordRepeat: this.textInputChange(\"valuePasswordRepeat\"),\n      valuePasswordRepeat: this.state.valuePasswordRepeat,\n      valuePassword: this.state.valuePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Mail, {\n      changeValueMail: this.textInputChange(\"valueMail\"),\n      valueMail: this.state.valueMail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      changeValueCheckBox: this.changeCheckBox(\"indicatorCheckBox\"),\n      valueCheckBox: this.state.indicatorCheckBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      checkedButton: this.state.checkedButton,\n      buttonFinish: this.buttonFinish(\"checkedButton\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\react\\spa\\src\\App.js"],"names":["React","SortCity","Header","StatusLine","City","Password","PasswordRepeat","Mail","CheckBox","Button","sortCity","App","Component","state","indicatorStatus","indicatorCheckBox","valueStatus","valuePassword","valuePasswordFinish","checkedPassword","valuePasswordRepeat","checkedPasswordRepeat","valueMail","checkedMail","valueCity","city","checkedButton","changeIndicator","field","event","setState","target","checked","textInputChange","value","textSelectChange","changeCheckBox","buttonFinish","length","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\n\nimport SortCity from './Block/resources/SortCity'\n\nimport Header from './Block/Header'\nimport StatusLine from './Block/StatusLine'\nimport City from './Block/City'\nimport Password from './Block/Password'\nimport PasswordRepeat from './Block/PasswordRepeat'\nimport Mail from './Block/Mail'\nimport CheckBox from './Block/CheckBox'\nimport Button from './Block/Button'\n\nlet sortCity=SortCity()\n\nclass App extends React.Component {\n  state = {\n    indicatorStatus: false,\n    indicatorCheckBox: true,\n    valueStatus: \"Прежде чем действовать надо понять\",\n    valuePassword: \"\",\n    valuePasswordFinish: \"\",\n    checkedPassword: false,\n    valuePasswordRepeat: \"\",\n    checkedPasswordRepeat: false,\n    valueMail: \"\",\n    checkedMail: false,\n    valueCity: sortCity[0].city,\n    checkedButton: false\n  }\n  changeIndicator = (field) => event => {\n    this.setState({ [field]: !event.target.checked });\n  }\n  textInputChange = (field) => event => {\n    this.setState({ [field]: event.target.value });\n  }\n  textSelectChange = event => {\n    this.setState({ valueCity: sortCity[event.target.value].city });\n  }\n  changeCheckBox = field => event => {\n    this.setState({ [field]: event.target.checked });\n  }\n  buttonFinish = field => event => {\n    if (this.state.valuePassword.length>0) {this.setState({checkedPassword: true})}\n    if (this.state.checkedPassword) {this.setState({checkedButton: true})}\n  }\n  render() {\n    return (\n      <div className=\"wrapper\" >\n        <Header\n          indicatorStatus={this.state.indicatorStatus}\n          changeIndicatorStatus={this.changeIndicator(\"indicatorStatus\")}\n        />\n        <StatusLine\n          valueStatus={this.state.valueStatus}\n          changeValueStatus={this.textInputChange(\"valueStatus\")}\n          indicatorStatus={this.state.indicatorStatus}\n        />\n        <City changeCity={this.textSelectChange}/>\n        <Password\n          changeValuePassword={this.textInputChange(\"valuePassword\")}\n          valuePassword={this.state.valuePassword}\n          checkedPassword={this.state.checkedPassword}\n        />\n        <PasswordRepeat\n          changeValuePasswordRepeat={this.textInputChange(\"valuePasswordRepeat\")}\n          valuePasswordRepeat={this.state.valuePasswordRepeat}\n          valuePassword={this.state.valuePassword}\n        />\n        <Mail\n          changeValueMail={this.textInputChange(\"valueMail\")}\n          valueMail={this.state.valueMail}\n        />\n        <CheckBox\n          changeValueCheckBox={this.changeCheckBox(\"indicatorCheckBox\")}\n          valueCheckBox={this.state.indicatorCheckBox}\n        />\n        <Button\n          checkedButton={this.state.checkedButton}\n          buttonFinish={this.buttonFinish(\"checkedButton\")}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}